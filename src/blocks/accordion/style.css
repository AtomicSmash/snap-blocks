/* Variables that should be set in a theme */
:root {
	--color-primary: #5f00be;
	--color-primary-faded: rgb(234 226 245);
	--border-base-radius: 0.625rem;
	--margin-between-blocks: 1rem;
	--padding-base: 1rem;
	--font-size-base: 1rem;
	--font-family-base: sans-serif;
}
@media screen and (min-width: 768px) {
	:root {
		--padding-base: 1.25rem;
	}
}
/**
 * The following styles get applied both on the front of your site
 * and in the editor.
 *
 * Do NOT include @tailwind base styles as there would be lots of duplication.
 * these styles should be included in a theme/ site global stylesheet.
 */

@config "./tailwind.block.config.cjs";
@tailwind components;
@tailwind utilities;
@tailwind variants;

/* Global resets, would usually be defined in theme stylesheet */
* {
	box-sizing: border-box;
}
input,
button {
	font: inherit;
}

.wp-block-snap-blocks-accordion {
	border-radius: var(--border-base-radius);
	margin-block: var(--margin-between-blocks);
	background-color: var(--color-primary-faded);
	/* This variable is called in JS so update the JS if you change this variable name */
	--accordion-open-close-timing: 0.2s;
}

/* Make the header text match no matter the selected semantic element */
/* The double selector is a editor specific specificity hack, which when using our own theme, we possibly wouldn't need. */
.wp-block-snap-blocks-accordion.wp-block-snap-blocks-accordion
	:is(h2, h3, h4, h5, h6, p) {
	margin: 0;
	font-size: var(--font-size-base);
	font-family: var(--font-family-base);
}

.accordion-header-button {
	display: flex;
	align-items: center;
	justify-content: space-between;
	gap: 1rem;
	width: 100%;
	background: none;
	border: none;
	padding: var(--padding-base);
	text-align: left;
}
.accordion-header-button-text {
	flex: 1;
}
.accordion-header-button-icon {
	width: 2rem;
	flex-basis: 2rem;
	transition: transform var(--accordion-open-close-timing) ease-in-out;
	transform-origin: center;
}
.accordion-header-button[data-state="collapsed"] svg {
	transform: rotate(-90deg);
}
.accordion-panel {
	transition: height var(--accordion-open-close-timing) ease-in-out;
	overflow: hidden;
}
.accordion-panel-inner-wrapper {
	padding: var(--padding-base);
}
.accordion-panel[data-state="collapsed"] {
	height: 0 !important;
}
